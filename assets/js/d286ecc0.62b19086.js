"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1038],{3402:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Steel Talons Documentation Overview","href":"/Steel-Talons-Documentation/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Robotics Control Theory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Control Types","href":"/Steel-Talons-Documentation/docs/control-theory/control-types","docId":"control-theory/control-types","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/robotics-control-theory"},{"type":"category","label":"Driver Assistance","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Driver Assistance Systems (FRC)","href":"/Steel-Talons-Documentation/docs/driver-assistance/","docId":"driver-assistance/driver-assistance","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/driver-assistance"},{"type":"category","label":"Robotics Intake Theory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intake Assistance","href":"/Steel-Talons-Documentation/docs/intake-assistance/","docId":"intake-assistance/intake-assistance","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/robotics-intake-theory"},{"type":"category","label":"Robotics Swerve Drives","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Swerve Drive System Documentation","href":"/Steel-Talons-Documentation/docs/swerve-drive/","docId":"swerve-drive/swerve-drive","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/robotics-swerve-drives"},{"type":"link","label":"Robotics Theory","href":"/Steel-Talons-Documentation/docs/theory","docId":"theory","unlisted":false},{"type":"category","label":"Command Strctures and Triggers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Command-Based Structure Overview","href":"/Steel-Talons-Documentation/docs/triggers-commands/","docId":"triggers-commands/triggers-commands","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/command-strctures-and-triggers"},{"type":"category","label":"Programming Practices","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Different Command Structures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hard Coded Commands","href":"/Steel-Talons-Documentation/docs/programming-setup/command-structure/hard-coded-commands","docId":"programming-setup/command-structure/hard-coded-commands","unlisted":false},{"type":"link","label":"State-Based Machines","href":"/Steel-Talons-Documentation/docs/programming-setup/command-structure/state-based-machines","docId":"programming-setup/command-structure/state-based-machines","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/different-command-structures"},{"type":"link","label":"Command Based Programming Overview","href":"/Steel-Talons-Documentation/docs/programming-setup/high-level-command-structure-overview","docId":"programming-setup/high-level-command-structure-overview","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/programming-practices"},{"type":"category","label":"Vision","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Vision Introduction","href":"/Steel-Talons-Documentation/docs/vision/vision-intro","docId":"vision/vision-intro","unlisted":false}],"href":"/Steel-Talons-Documentation/docs/category/vision"}]},"docs":{"control-theory/control-types":{"id":"control-theory/control-types","title":"Control Types","description":"Overview","sidebar":"tutorialSidebar"},"driver-assistance/driver-assistance":{"id":"driver-assistance/driver-assistance","title":"Driver Assistance Systems (FRC)","description":"This document outlines various types of driver assistance systems to improve efficiency, accuracy, and reliability in FRC gameplay. These include targeting, intake, and scoring aids based on onboard sensors and vision systems.","sidebar":"tutorialSidebar"},"intake-assistance/intake-assistance":{"id":"intake-assistance/intake-assistance","title":"Intake Assistance","description":"Overview","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Steel Talons Documentation Overview","description":"Getting Started","sidebar":"tutorialSidebar"},"programming-setup/command-structure/hard-coded-commands":{"id":"programming-setup/command-structure/hard-coded-commands","title":"Hard Coded Commands","description":"hard","sidebar":"tutorialSidebar"},"programming-setup/command-structure/state-based-machines":{"id":"programming-setup/command-structure/state-based-machines","title":"State-Based Machines","description":"","sidebar":"tutorialSidebar"},"programming-setup/high-level-command-structure-overview":{"id":"programming-setup/high-level-command-structure-overview","title":"Command Based Programming Overview","description":"Command Based Programming is a programming paradigm used in robotics to structure code in a way that separates the logic of the robot\'s behavior from the hardware control. This allows for easier debugging, testing, and maintenance of the code.","sidebar":"tutorialSidebar"},"swerve-drive/swerve-drive":{"id":"swerve-drive/swerve-drive","title":"Swerve Drive System Documentation","description":"This document outlines the logic and structure of a swerve drive control system for a 2025 FRC (FIRST Robotics Competition) robot. A swerve drive system allows each wheel module to independently steer and drive, enabling holonomic motion in any direction.","sidebar":"tutorialSidebar"},"theory":{"id":"theory","title":"Robotics Theory","description":"Introduction","sidebar":"tutorialSidebar"},"triggers-commands/triggers-commands":{"id":"triggers-commands/triggers-commands","title":"Command-Based Structure Overview","description":"This guide provides an overview of how the command-based architecture is structured in an FRC robot project using WPILib.","sidebar":"tutorialSidebar"},"vision/vision-intro":{"id":"vision/vision-intro","title":"Vision Introduction","description":"Computer vision is a branch of programming that enables computers to interpret and understand visual information from the world. It involves the development of algorithms and models that can analyze images and videos, extract meaningful features, and make decisions based on visual data.","sidebar":"tutorialSidebar"}}}}')}}]);